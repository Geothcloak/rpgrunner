using UnityEngine;
using System.Collections;

public class SwapBlocks : MonoBehaviour {
	public Vector3[] blockPosition;
	public GameObject[] blockForSwitch;
	
	GameObject[,] blocksInPlay;
	public GameObject genericBlock;

	void Start () {
		NewGameSpawn();
	}
	// Update is called once per frame
	void Update () {
		if (Input.GetMouseButtonDown(0)){
			Debug.Log("pressed left mouse");
			GetPosition(0);
		}	
		if (Input.GetMouseButtonUp(0)){
			Debug.Log("released left mouse");
			GetPosition(1);
			if (blockForSwitch[0] != null && blockForSwitch[1] != null){	
				Swap();
			}
		}
	}
	void GetPosition(int blockIndex){
		var mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
		var ray = Camera.main.ScreenPointToRay(Input.mousePosition);
		RaycastHit2D hit;
		hit = Physics2D.Raycast (new Vector2(mousePosition.x,mousePosition.y),Vector2.zero,Mathf.Infinity);
		if (hit != null && hit.collider != null){
		//	SpriteRenderer blockRenderer = hit.collider.gameObject.GetComponent<SpriteRenderer>();
		//	blockRenderer.color = Color.white; 
			blockPosition[blockIndex] = hit.collider.gameObject.transform.position;
		   	blockForSwitch[blockIndex] = hit.collider.gameObject;
		}
	}
	void Swap() {
		// swap blocks
		Vector3 tempVector3 = blockPosition[0];
		blockForSwitch[0].transform.position = blockPosition[1];
		blockForSwitch[1].transform.position = tempVector3;
		// swap positions in array
		
		// check
		//
		// if no match 3 then swap back
		
		
		
		
		//null position holders and gameobject holders to avoid bugs.	
		blockPosition[0] = Vector3.zero;
		blockPosition[1] = Vector3.zero;
		blockForSwitch[0] = null;
		blockForSwitch[1] = null;
	}
	void checkMatch(){
		int matches = 0;
		//check rows
		for ( int i = 0; i <= 7; i++ ){
				for ( int ii = 0; ii <= 6; ii++ ){
					//i = columns   ii = rows
					//
					if (blocksInPlay[ii, i] == blocksInPlay[ii + 1, i]){
						matches ++;
					}else{
						matches = 0;
					}		
					if (matches == 3){
						//delete blocks;
						//break;
					}
				   	
				}
		}

		//check columns	
		for ( int i = 0; i <= 6; i++ ){
				for ( int ii = 0; ii <= 7; ii++ ){
					//i = columns   ii = rows
					//
					if (blocksInPlay[ii, i] == blocksInPlay[ii, i + 1]){
						matches ++;
					}else{
						matches = 0;
					}		
					if (matches == 3){
						//delete blocks;
						//break;
					}
				   	
				}
		}


	}
	void NewGameSpawn(){
		blocksInPlay = new GameObject[8,8];
			for ( int i = 7; i >= 0; i-- ){
				for ( int ii = 7; ii >= 0; ii--){
					GameObject tempGameObject;
					//i = columns   ii = rows	
				    //tempGameObject =  Instantiate(blockPrefabs[Random.Range(0,8)], new Vector3(i-3.5f,ii-5f,0), Quaternion.identity) as GameObject;
					tempGameObject = Instantiate(genericBlock, new Vector3(i-3.5f,ii-5f,0), Quaternion.identity) as GameObject;
					blocksInPlay[i,ii] = tempGameObject;
				}
			}	
	}
	
	
}

